<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云之彼端</title>
  
  <subtitle>twh blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://twheastasia.github.io/"/>
  <updated>2022-08-19T02:36:02.235Z</updated>
  <id>http://twheastasia.github.io/</id>
  
  <author>
    <name>weihai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用frp+nginx搭建http+https内网穿透服务</title>
    <link href="http://twheastasia.github.io/2022/08/18/%E4%BD%BF%E7%94%A8frp+nginx%E6%90%AD%E5%BB%BAhttp+https%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1/"/>
    <id>http://twheastasia.github.io/2022/08/18/使用frp+nginx搭建http+https内网穿透服务/</id>
    <published>2022-08-18T11:27:00.000Z</published>
    <updated>2022-08-19T02:36:02.235Z</updated>
    
    <content type="html"><![CDATA[<p>最近入手了一个海思机顶盒（<a href="https://www.ecoo.top/">https://www.ecoo.top/</a>），刷好了armbian系统，突发奇想可以利用这个小系统的frp做一个类似花生棒的工具。以前是直接在服务器上运行frp客户端，这次把frp客户端运行在独立的设备上，通过IP+port访问局域网里的其他服务，并且使用泛域名方便以后无限扩展。</p><p>大概的流程在参考资料里，网友写的很详细了，我主要是记录我在实践中遇到的问题。</p><h2 id="1-使用acme生成和管理证书"><a href="#1-使用acme生成和管理证书" class="headerlink" title="1.使用acme生成和管理证书"></a>1.使用acme生成和管理证书</h2><p>前置条件：</p><ol><li>域名</li><li>dnspod</li><li>云主机</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 下载安装acme</span><br><span class="line">curl https:&#x2F;&#x2F;get.acme.sh | sh</span><br><span class="line"># 创建acme别名</span><br><span class="line">alias acme.sh&#x3D;~&#x2F;.acme.sh&#x2F;acme.sh</span><br><span class="line"># 查看crontab，应该已经有定时任务去更新证书</span><br><span class="line">crontab -l</span><br><span class="line"># 给泛域名生成证书，这里不写了</span><br></pre></td></tr></table></figure><h2 id="2-frps端配置"><a href="#2-frps端配置" class="headerlink" title="2.frps端配置"></a>2.frps端配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">common</span>]</span><br><span class="line"><span class="string">auto_token</span> <span class="string">=</span> <span class="string">xxxxx</span></span><br><span class="line"><span class="string">bind_addr</span> <span class="string">=</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="string">bind_port</span> <span class="string">=</span> <span class="number">7001</span></span><br><span class="line"><span class="comment">#frp内网穿透服务器可以支持虚拟主机的http和https协议，一般我们都用80，可以直接用域名而不用增加端口号，如果使用其它端口，那么客户端也需要配置相同的其他端口。</span></span><br><span class="line"><span class="string">vhost_http_port</span> <span class="string">=</span> <span class="number">7999</span></span><br><span class="line"><span class="comment">#vhost_https_port = 443</span></span><br><span class="line"><span class="string">dashboard_user</span> <span class="string">=</span> <span class="string">admin</span></span><br><span class="line"><span class="string">dashboard_pwd</span> <span class="string">=</span> <span class="string">admin</span></span><br><span class="line"><span class="comment"># 这个是frp内网穿透服务器的web界面的端口，可以通过http://你的ip:7003查看frp内网穿透服务器端的连接情况，和各个frp内网穿透客户端的连接情况。</span></span><br><span class="line"><span class="string">dashboard_port</span> <span class="string">=</span> <span class="number">7003</span></span><br><span class="line"><span class="string">privilege_token</span> <span class="string">=</span> <span class="number">12345678</span></span><br><span class="line"><span class="string">subdomain_host</span> <span class="string">=</span> <span class="string">frp.example.com</span></span><br></pre></td></tr></table></figure><h2 id="3-nginx配置"><a href="#3-nginx配置" class="headerlink" title="3.nginx配置"></a>3.nginx配置</h2><p>这里采用的方案是把证书放在frp服务器上，不放在客户端</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frp https</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> <span class="regexp">*.frp.linyanli.cn</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /home/lighthouse/.acme.sh/<span class="regexp">*.frp.example.com</span>/<span class="regexp">*.frp.example.com.cer</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /home/lighthouse/.acme.sh/<span class="regexp">*.frp.example.com</span>/<span class="regexp">*.frp.example.com.key</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>; <span class="comment">#按照这个协议配置</span></span><br><span class="line">    <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<span class="comment">#按照这个套件配置</span></span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">if</span> ($ssl_protocol = <span class="string">&quot;&quot;</span>) &#123; <span class="attribute">return</span> <span class="number">301</span> https://$host$request_uri; &#125;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:7999;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host $http_host;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-NginX-Proxy <span class="literal">true</span>;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade $http_upgrade;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_max_temp_file_size</span> <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">240s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span> /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-frpc配置"><a href="#4-frpc配置" class="headerlink" title="4.frpc配置"></a>4.frpc配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">common</span>]</span><br><span class="line"><span class="string">server_addr</span> <span class="string">=</span> <span class="number">49.235</span><span class="number">.100</span><span class="number">.43</span></span><br><span class="line"><span class="string">server_port</span> <span class="string">=</span> <span class="number">7001</span></span><br><span class="line"><span class="string">auto_token</span> <span class="string">=</span> <span class="string">twh_frp</span></span><br><span class="line"></span><br><span class="line">[<span class="string">ssh-hi-nas</span>]</span><br><span class="line"><span class="string">type</span> <span class="string">=</span> <span class="string">tcp</span></span><br><span class="line"><span class="string">local_ip</span> <span class="string">=</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="string">local_port</span> <span class="string">=</span> <span class="number">22</span></span><br><span class="line"><span class="string">remote_port</span> <span class="string">=</span> <span class="number">7015</span></span><br><span class="line"></span><br><span class="line">[<span class="string">web-nas</span>]</span><br><span class="line"><span class="string">type</span> <span class="string">=</span> <span class="string">http</span></span><br><span class="line"><span class="string">local_ip</span> <span class="string">=</span> <span class="string">局域网ip</span></span><br><span class="line"><span class="string">local_port</span> <span class="string">=</span> <span class="number">5000</span></span><br><span class="line"><span class="string">subdomain</span> <span class="string">=</span> <span class="string">nas</span></span><br><span class="line"></span><br><span class="line">[<span class="string">web-hinas</span>]</span><br><span class="line"><span class="string">type</span> <span class="string">=</span> <span class="string">http</span></span><br><span class="line"><span class="string">local_ip</span> <span class="string">=</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="string">local_port</span> <span class="string">=</span> <span class="number">80</span></span><br><span class="line"><span class="string">subdomain</span> <span class="string">=</span> <span class="string">hinas</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ol><li>nginx反代后访问域名报404错误。</li><li>nginx反代后访问域名报502错误。<blockquote><p>1 和 2 都是端口没有配置对，当然还需要确保云主机防火墙规则是否开放、frps有没有端口限制；如果是docker容器启动的frps，要看看端口都设置好没有</p></blockquote></li><li>多级域名在 http强制跳转https时，url遇到转义问题。<blockquote><p>nginx 里同时监听80 和 443 端口，并加上<br><code>if ($ssl_protocol = &quot;&quot;) &#123; return 301 https://$host$request_uri; &#125;</code></p></blockquote></li></ol><h2 id="两种模式："><a href="#两种模式：" class="headerlink" title="两种模式："></a>两种模式：</h2><ol><li>设置vhost_https_port，nginx代理时转到这个端口，然后证书都配置在客户端</li><li>只设置vhost_http_port，nginx代理时转到这个端口，然后证书配置在服务端</li></ol><p>配合acme自动管理、更新服务器端证书，明显第二种模式方便很多，服务端只需要配置一次，基本就可以不用再操心了。</p><h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h2><p><a href="https://www.bilibili.com/read/cv13684403/">https://www.bilibili.com/read/cv13684403/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近入手了一个海思机顶盒（&lt;a href=&quot;https://www.ecoo.top/&quot;&gt;https://www.ecoo.top/&lt;/a&gt;），刷好了armbian系统，突发奇想可以利用这个小系统的frp做一个类似花生棒的工具。以前是直接在服务器上运行frp客户端，这次把f
      
    
    </summary>
    
    
      <category term="frp" scheme="http://twheastasia.github.io/tags/frp/"/>
    
      <category term="nginx" scheme="http://twheastasia.github.io/tags/nginx/"/>
    
      <category term="https" scheme="http://twheastasia.github.io/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>树莓派电子相册-软件篇</title>
    <link href="http://twheastasia.github.io/2022/01/09/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%94%B5%E5%AD%90%E7%9B%B8%E5%86%8C-%E8%BD%AF%E4%BB%B6%E7%AF%87/"/>
    <id>http://twheastasia.github.io/2022/01/09/树莓派电子相册-软件篇/</id>
    <published>2022-01-09T01:47:00.000Z</published>
    <updated>2022-01-10T04:44:45.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件篇"><a href="#软件篇" class="headerlink" title="软件篇"></a>软件篇</h1><blockquote><p>分享一下自己搞的树莓派电子相框；记录下都做了些什么操作</p></blockquote><h2 id="1-系统镜像"><a href="#1-系统镜像" class="headerlink" title="1. 系统镜像"></a>1. 系统镜像</h2><p>树莓派安装有GUI的系统（清华源）<br><a href="https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/">https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/</a></p><h2 id="2-替换软件源"><a href="#2-替换软件源" class="headerlink" title="2. 替换软件源"></a>2. 替换软件源</h2><h3 id="2-1-备份-etc-apt-sources-list"><a href="#2-1-备份-etc-apt-sources-list" class="headerlink" title="2.1 备份 /etc/apt/sources.list"></a>2.1 备份 /etc/apt/sources.list</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><h3 id="2-2-修改里面的软件源为"><a href="#2-2-修改里面的软件源为" class="headerlink" title="2.2 修改里面的软件源为"></a>2.2 修改里面的软件源为</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ <span class="comment">#后面还有一部分，复制原来的</span></span><br></pre></td></tr></table></figure><h2 id="3-安装vim，feh，zerotier"><a href="#3-安装vim，feh，zerotier" class="headerlink" title="3. 安装vim，feh，zerotier"></a>3. 安装vim，feh，zerotier</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y vim feh</span><br><span class="line"><span class="comment"># 安装zerotier</span></span><br><span class="line">curl -s https://install.zerotier.com | sudo bash</span><br><span class="line">zerotier-cli join a0cbf4b62abd56ec</span><br><span class="line"><span class="comment"># zerotier 还可以自建moon节点，来提高连接速度或打洞成功率</span></span><br><span class="line"><span class="comment"># zerotier-cli orbit xxxx xxxx</span></span><br></pre></td></tr></table></figure><h2 id="4-feh脚本"><a href="#4-feh脚本" class="headerlink" title="4. feh脚本"></a>4. feh脚本</h2><blockquote><p>info打印出“从python脚本中获取到的时间、天气信息”</p><p>harmony字体是我从电脑上复制的ttf字体，一定要是ttf，不能是ttc（feh中不生效）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># -r 随机展示</span></span><br><span class="line"><span class="comment"># -z</span></span><br><span class="line"><span class="comment"># -F 全屏</span></span><br><span class="line"><span class="comment"># -Y 隐藏鼠标</span></span><br><span class="line"><span class="comment"># -Z</span></span><br><span class="line"><span class="comment"># -D 照片停留时间（秒）</span></span><br><span class="line"><span class="comment"># -R 照片数据刷新时间（秒）</span></span><br><span class="line"><span class="comment"># --info 左下角展示的信息</span></span><br><span class="line"><span class="comment"># -C 设置字体路径</span></span><br><span class="line"><span class="comment"># -e 设置字体名字/字号</span></span><br><span class="line">feh /home/pi/Pictures/ -rzFYZ -D 60 -R 120 --info <span class="string">&quot;python3 /home/pi/Desktop/info.py&quot;</span> -C /usr/share/fonts/truetype/harmonyos_sans_sc -e HarmonyOS_Sans_SC_Regular/30</span><br></pre></td></tr></table></figure><h2 id="5-群晖服务器定时脚本"><a href="#5-群晖服务器定时脚本" class="headerlink" title="5. 群晖服务器定时脚本"></a>5. 群晖服务器定时脚本</h2><blockquote><p>这一步是用来远程同步树莓派上的相册。可以有很多其他方法。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># ip是zerotier中获得的</span></span><br><span class="line">rsync -azrtvP /var/services/homes/twh/Drive/pi_photos/ pi@[ip]:/home/pi/Pictures/</span><br></pre></td></tr></table></figure><h2 id="6-树莓派上开机自启动feh脚本"><a href="#6-树莓派上开机自启动feh脚本" class="headerlink" title="6. 树莓派上开机自启动feh脚本"></a>6. 树莓派上开机自启动feh脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/pi/.config/autostart</span><br><span class="line">vim /home/pi/.config/autostart/feh.desktop</span><br></pre></td></tr></table></figure><blockquote><p>feh脚本的内容如下：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Type&#x3D;Application</span><br><span class="line">Name&#x3D;feh</span><br><span class="line">Exec&#x3D;&#x2F;home&#x2F;pi&#x2F;Desktop&#x2F;start.sh</span><br></pre></td></tr></table></figure><h2 id="7-设置树莓派屏幕常亮，禁止树莓派屏幕休眠"><a href="#7-设置树莓派屏幕常亮，禁止树莓派屏幕休眠" class="headerlink" title="7. 设置树莓派屏幕常亮，禁止树莓派屏幕休眠"></a>7. 设置树莓派屏幕常亮，禁止树莓派屏幕休眠</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/lightdm/lightdm.conf</span><br><span class="line"><span class="comment"># 找到[Seat:*]这一项，在下面的‘#xserver-command=X’删除前面的注释符#，修改为以下</span></span><br><span class="line">xserver-command=X -s 0-dpms</span><br><span class="line"><span class="comment"># 其中，-s 参数：设置屏幕保护不启动，0 数字零，-dpms 参数：关闭电源节能管理。</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h2 id="8-定时控制背光亮度"><a href="#8-定时控制背光亮度" class="headerlink" title="8.  定时控制背光亮度"></a>8.  定时控制背光亮度</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> X &gt; /sys/class/backlight/rpi_backlight/brightness </span><br><span class="line"><span class="comment"># (其中X表示0~255中的任意数字。0表示背光最暗，255表示背光最亮)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用crontab 定时控制背光亮度</span></span><br><span class="line">0 22 * * * /home/pi/Desktop/turn_down_brightness.sh</span><br><span class="line">0 6 * * * /home/pi/Desktop/turn_up_brightness.sh</span><br></pre></td></tr></table></figure><blockquote><p>这里有坑，每次重启树莓派后 /sys/class/backlight/rpi_backlight/brightness 这个权限会背重置，导致我的crontab执行失败，我的解决办法是在root用户下开机启动的时候执行命令修改权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">vim /etc/rc.local</span><br><span class="line"><span class="comment"># 在适当的位置插入命令</span></span><br><span class="line">chmod 666 /sys/class/backlight/rpi_backlight/brightness</span><br></pre></td></tr></table></figure><blockquote><p>调亮脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> 200 &gt; /sys/class/backlight/rpi_backlight/brightness</span><br></pre></td></tr></table></figure><blockquote><p>调暗脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> 30 &gt; /sys/class/backlight/rpi_backlight/brightness</span><br></pre></td></tr></table></figure><h2 id="9-显示日期时间"><a href="#9-显示日期时间" class="headerlink" title="9.  显示日期时间"></a>9.  显示日期时间</h2><blockquote><p>利用python脚本实现</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">tempeature = <span class="string">&#x27;-&#x27;</span></span><br><span class="line">weather = <span class="string">&#x27;未知&#x27;</span></span><br><span class="line">response = &#123;&#125;</span><br><span class="line">wind_dir = <span class="string">&#x27;东风&#x27;</span></span><br><span class="line">wind_scale = <span class="string">&#x27;0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;/home/pi/Desktop/city_weather.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    response = json.loads(f.read())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response[<span class="string">&quot;code&quot;</span>] == <span class="string">&quot;200&quot;</span>:</span><br><span class="line">    tempeature = response[<span class="string">&quot;now&quot;</span>][<span class="string">&quot;temp&quot;</span>]</span><br><span class="line">    weather = response[<span class="string">&quot;now&quot;</span>][<span class="string">&quot;text&quot;</span>]</span><br><span class="line">    wind_dir = response[<span class="string">&quot;now&quot;</span>][<span class="string">&quot;windDir&quot;</span>]</span><br><span class="line">    wind_scale = response[<span class="string">&quot;now&quot;</span>][<span class="string">&quot;windScale&quot;</span>]</span><br><span class="line"></span><br><span class="line">date = time.strftime(<span class="string">&quot;%Y-%m-%d %H:%M&quot;</span>, time.localtime())</span><br><span class="line"></span><br><span class="line"><span class="comment"># feh的info参数会直接拿这个输出来展示</span></span><br><span class="line">print(<span class="string">&quot;&#123;0&#125;\n上海: &#123;1&#125;, &#123;2&#125;℃\n&#123;3&#125;&#123;4&#125;级&quot;</span>.<span class="built_in">format</span>(date, weather, tempeature, wind_dir, wind_scale))</span><br></pre></td></tr></table></figure><h2 id="10-显示天气"><a href="#10-显示天气" class="headerlink" title="10. 显示天气"></a>10. 显示天气</h2><blockquote><p>利用python脚本实现，调用<a href="https://dev.qweather.com/">和风天气api</a></p><p>获取到天气数据后，存在一个json文件里</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;xxxx&quot;</span></span><br><span class="line">location_id = <span class="string">&quot;101020100&quot;</span> <span class="comment"># 上海</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://devapi.qweather.com/v7/weather/now?key=&#123;0&#125;&amp;location=&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(key, location_id)</span><br><span class="line"></span><br><span class="line">payload=&#123;&#125;</span><br><span class="line">headers = &#123;&#125;</span><br><span class="line"></span><br><span class="line">response = requests.request(<span class="string">&quot;GET&quot;</span>, url, headers=headers, data=payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">    ffw = <span class="built_in">open</span>(<span class="string">&#x27;/home/pi/Desktop/city_weather.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line">    ffw.write(response.text)</span><br><span class="line">    ffw.close()</span><br><span class="line">    print(<span class="string">&#x27;Updated!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;Nothing Change.&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="11-为减少和风天气api调用次数，每小时更新一次数据"><a href="#11-为减少和风天气api调用次数，每小时更新一次数据" class="headerlink" title="11. 为减少和风天气api调用次数，每小时更新一次数据"></a>11. 为减少和风天气api调用次数，每小时更新一次数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加入crontab</span></span><br><span class="line">0 * * * * python3 /home/pi/Desktop/weather.py</span><br></pre></td></tr></table></figure><h2 id="12-重启，KO"><a href="#12-重启，KO" class="headerlink" title="12. 重启，KO"></a>12. 重启，KO</h2><p><img src="/images/%E5%B1%95%E7%A4%BA1.jpg" alt="结果"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;软件篇&quot;&gt;&lt;a href=&quot;#软件篇&quot; class=&quot;headerlink&quot; title=&quot;软件篇&quot;&gt;&lt;/a&gt;软件篇&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;分享一下自己搞的树莓派电子相框；记录下都做了些什么操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=
      
    
    </summary>
    
    
      <category term="raspberry pi" scheme="http://twheastasia.github.io/tags/raspberry-pi/"/>
    
      <category term="feh" scheme="http://twheastasia.github.io/tags/feh/"/>
    
  </entry>
  
  <entry>
    <title>gitbook搭建一个简单的faq网站</title>
    <link href="http://twheastasia.github.io/2020/10/29/gitbook%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84faq%E7%BD%91%E7%AB%99/"/>
    <id>http://twheastasia.github.io/2020/10/29/gitbook搭建一个简单的faq网站/</id>
    <published>2020-10-29T01:47:00.000Z</published>
    <updated>2020-10-29T06:40:54.063Z</updated>
    
    <content type="html"><![CDATA[<p>这篇写于很久以前，现在gitbook已经发生了巨大的变化。<br>谨以此篇，留作纪念。</p><h3 id="1-npm安装gitbook-cli"><a href="#1-npm安装gitbook-cli" class="headerlink" title="1. npm安装gitbook-cli"></a>1. npm安装gitbook-cli</h3><blockquote><p>npm install -g gitbook-cli</p></blockquote><h3 id="2-新建一个项目目录，进到目录里执行"><a href="#2-新建一个项目目录，进到目录里执行" class="headerlink" title="2. 新建一个项目目录，进到目录里执行"></a>2. 新建一个项目目录，进到目录里执行</h3><blockquote><p>gitbook init</p></blockquote><h3 id="3-新建book-json（这是配置文件），加入faq主题"><a href="#3-新建book-json（这是配置文件），加入faq主题" class="headerlink" title="3. 新建book.json（这是配置文件），加入faq主题"></a>3. 新建book.json（这是配置文件），加入faq主题</h3><blockquote><p>{    “plugins”:[“theme-faq”]}</p></blockquote><h3 id="4-再加入中文搜索功能"><a href="#4-再加入中文搜索功能" class="headerlink" title="4. 再加入中文搜索功能"></a>4. 再加入中文搜索功能</h3><blockquote><p>{“plugins”:[“theme-faq”, “-lunr”, “search-jieba”]}</p></blockquote><h3 id="5-加入插件后需要执行"><a href="#5-加入插件后需要执行" class="headerlink" title="5. 加入插件后需要执行"></a>5. 加入插件后需要执行</h3><blockquote><p>gitbook install </p></blockquote><h3 id="6-启动服务"><a href="#6-启动服务" class="headerlink" title="6. 启动服务"></a>6. 启动服务</h3><blockquote><p>gitbook serve</p></blockquote><h3 id="7-启动后访问localhost-4000，页面样式就像这样"><a href="#7-启动后访问localhost-4000，页面样式就像这样" class="headerlink" title="7. 启动后访问localhost:4000，页面样式就像这样"></a>7. 启动后访问localhost:4000，页面样式就像这样</h3><p><img src="http://img.blog.csdn.net/20170105203323433?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdHdoX2Vhc3Q=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="输入文字开始搜索"></p><h3 id="8-Gitbook-Editor很好用，可以添加、管理文章"><a href="#8-Gitbook-Editor很好用，可以添加、管理文章" class="headerlink" title="8. Gitbook Editor很好用，可以添加、管理文章"></a>8. Gitbook Editor很好用，可以添加、管理文章</h3><hr><h2 id="有一些坑："><a href="#有一些坑：" class="headerlink" title="有一些坑："></a>有一些坑：</h2><ul><li><p>官网上说最多可以添加100篇文章，可能是说在线gitbook，具体需要尝试 - 中文搜索由于分词的关系，搜索单字时效果不好 </p></li><li><p>搜索框内输入过快、或者说快速变化输入的单词时，搜索的结果和预期的不一样 </p></li><li><p>README会显示在搜索框下方，不显示在文章列表里，但是下面第一部分的文章数量又包含了README，强迫症很纠结 </p></li></ul><hr><p>参考：</p><p><a href="https://www.gitbook.com/" target="_blank" rel="noopener">https://www.gitbook.com/</a></p><p><a href="https://plugins.gitbook.com/" target="_blank" rel="noopener">https://plugins.gitbook.com/</a></p><p><a href="https://help.gitbook.com/" target="_blank" rel="noopener">https://help.gitbook.com/</a></p><p><a href="https://plugins.gitbook.com/plugin/search-jieba" target="_blank" rel="noopener">https://plugins.gitbook.com/plugin/search-jieba</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇写于很久以前，现在gitbook已经发生了巨大的变化。&lt;br&gt;谨以此篇，留作纪念。&lt;/p&gt;
&lt;h3 id=&quot;1-npm安装gitbook-cli&quot;&gt;&lt;a href=&quot;#1-npm安装gitbook-cli&quot; class=&quot;headerlink&quot; title=&quot;1. np
      
    
    </summary>
    
    
      <category term="gitbook" scheme="http://twheastasia.github.io/tags/gitbook/"/>
    
      <category term="faq" scheme="http://twheastasia.github.io/tags/faq/"/>
    
  </entry>
  
  <entry>
    <title>vue中不同样式写法的优先级</title>
    <link href="http://twheastasia.github.io/2020/08/03/vue%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%A0%B7%E5%BC%8F%E5%86%99%E6%B3%95%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/"/>
    <id>http://twheastasia.github.io/2020/08/03/vue中不同样式写法的优先级/</id>
    <published>2020-08-03T01:45:00.000Z</published>
    <updated>2020-08-07T02:43:37.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue中不同样式写法的优先级"><a href="#vue中不同样式写法的优先级" class="headerlink" title="vue中不同样式写法的优先级"></a>vue中不同样式写法的优先级</h1><h3 id="先直接上代码"><a href="#先直接上代码" class="headerlink" title="先直接上代码"></a>先直接上代码</h3><blockquote><p>html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"style-template"</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"style-template"</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"style-template"</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"style-template"</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>css</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">  .style-template &#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">brown</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: chartreuse;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.style-template</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主要有几种写法："><a href="#主要有几种写法：" class="headerlink" title="主要有几种写法："></a>主要有几种写法：</h3><ol><li>html元素的css</li><li>在元素下设置子元素样式</li><li>元素设置class属性</li><li>元素设置style属性</li></ol><h3 id="代码实际运行结果："><a href="#代码实际运行结果：" class="headerlink" title="代码实际运行结果："></a>代码实际运行结果：</h3><p><img src="/images/WX20200807-102652.png" alt="css-demo"></p><h3 id="根据实验得出结论（优先级从高到底）："><a href="#根据实验得出结论（优先级从高到底）：" class="headerlink" title="根据实验得出结论（优先级从高到底）："></a>根据实验得出结论（优先级从高到底）：</h3><blockquote><p><strong>元素设置style属性 &gt; 元素设置class属性 &gt; 在元素下设置子元素样式 &gt; html元素的css</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue中不同样式写法的优先级&quot;&gt;&lt;a href=&quot;#vue中不同样式写法的优先级&quot; class=&quot;headerlink&quot; title=&quot;vue中不同样式写法的优先级&quot;&gt;&lt;/a&gt;vue中不同样式写法的优先级&lt;/h1&gt;&lt;h3 id=&quot;先直接上代码&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="vuejs" scheme="http://twheastasia.github.io/categories/vuejs/"/>
    
    
      <category term="vue" scheme="http://twheastasia.github.io/tags/vue/"/>
    
      <category term="css" scheme="http://twheastasia.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>quill-image-resize-module 踩坑</title>
    <link href="http://twheastasia.github.io/2020/04/21/quill-image-resize-module%20%E8%B8%A9%E5%9D%91/"/>
    <id>http://twheastasia.github.io/2020/04/21/quill-image-resize-module 踩坑/</id>
    <published>2020-04-21T01:46:00.000Z</published>
    <updated>2020-08-03T02:19:15.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="quill-image-resize-module-踩坑"><a href="#quill-image-resize-module-踩坑" class="headerlink" title="quill-image-resize-module 踩坑"></a>quill-image-resize-module 踩坑</h1><p>项目中使用了 <a href="https://github.com/surmon-china/vue-quill-editor" target="_blank" rel="noopener">Vue-Quill-Editor</a>，挺好用的，但是对于图片上传并不是我希望的效果。好在有扩展，可以满足我的两个需求：</p><ol><li>上传图片到图床</li><li>调整图片大小</li></ol><p>分别对应两个module：</p><ol><li><a href="https://github.com/NextBoy/quill-image-extend-module" target="_blank" rel="noopener">quill-image-extend-module</a></li><li><a href="https://github.com/kensnyder/quill-image-resize-module" target="_blank" rel="noopener">quill-image-resize-module</a></li></ol><h3 id="quill-image-extend-module"><a href="#quill-image-extend-module" class="headerlink" title="quill-image-extend-module"></a>quill-image-extend-module</h3><p>quill-image-extend-module照着readme一步一步操作即可</p><h3 id="quill-image-resize-module"><a href="#quill-image-resize-module" class="headerlink" title="quill-image-resize-module"></a>quill-image-resize-module</h3><p>这里遇到3个问题：</p><ol><li>imports 问题<br>需要在webpack中手动添加quill插件</li><li>register 问题</li><li>quill Cannot import modules/imageResize. Are you sure it was registered?<blockquote><p>这两个问题是一定要把大小写写对。。。<br><a href="https://github.com/kensnyder/quill-image-resize-module/blob/60a43a2477e9947da78a08877bd18a38bc6476af/src/ImageResize.js#L199" target="_blank" rel="noopener">代码</a>中注册时写了imageResize,所以后面使用时也要写生首字母小写</p></blockquote></li></ol><h5 id="完整的代码如下："><a href="#完整的代码如下：" class="headerlink" title="完整的代码如下："></a>完整的代码如下：</h5><blockquote><p>vue.config.js</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  chainWebpack(config) &#123;</span><br><span class="line">    config</span><br><span class="line">    .plugin(<span class="string">'Quill'</span>)</span><br><span class="line">    .use(webpack.ProvidePlugin, [&#123;</span><br><span class="line">      <span class="string">'window.Quill'</span>: <span class="string">'quill'</span></span><br><span class="line">      <span class="comment">// 或</span></span><br><span class="line">      <span class="comment">// 'window.Quill': 'quill/dist/quill.js',</span></span><br><span class="line">      <span class="comment">// 'Quill': 'quill/dist/quill.js'</span></span><br><span class="line">    &#125;])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>vue</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; quillEditor, Quill &#125; <span class="keyword">from</span> <span class="string">'vue-quill-editor'</span></span><br><span class="line"><span class="keyword">import</span> &#123; ImageExtend, QuillWatch &#125; <span class="keyword">from</span> <span class="string">'quill-image-extend-module'</span></span><br><span class="line"><span class="keyword">import</span> ImageResize <span class="keyword">from</span> <span class="string">'quill-image-resize-module'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'quill/dist/quill.core.css'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'quill/dist/quill.snow.css'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'quill/dist/quill.bubble.css'</span></span><br><span class="line"></span><br><span class="line">Quill.register(<span class="string">'modules/ImageExtend'</span>, ImageExtend)</span><br><span class="line">Quill.register(<span class="string">'modules/imageResize'</span>, ImageResize)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">  quillEditorOptions: &#123;</span><br><span class="line">    modules: &#123;</span><br><span class="line">      <span class="comment">// 调整图片大小</span></span><br><span class="line">      imageResize: &#123;</span><br><span class="line">        modules: [<span class="string">'Resize'</span>, <span class="string">'DisplaySize'</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 上传到图床</span></span><br><span class="line">      ImageExtend: &#123;</span><br><span class="line">        loading: <span class="literal">true</span>,</span><br><span class="line">        name: <span class="string">'file'</span>,</span><br><span class="line">        action: <span class="string">'url,</span></span><br><span class="line"><span class="string">        response: (res) =&gt; &#123;</span></span><br><span class="line"><span class="string">          return res.url</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      // 如果不上传图片到服务器，此处不必配置</span></span><br><span class="line"><span class="string">      toolbar: &#123;</span></span><br><span class="line"><span class="string">        // container为工具栏，此次引入了全部工具栏，也可自行配置</span></span><br><span class="line"><span class="string">        container: [</span></span><br><span class="line"><span class="string">          ['</span>bold<span class="string">', '</span>italic<span class="string">', '</span>underline<span class="string">', '</span>strike<span class="string">'],</span></span><br><span class="line"><span class="string">          ['</span>blockquote<span class="string">', '</span>code-block<span class="string">'],</span></span><br><span class="line"><span class="string">          [&#123; '</span>list<span class="string">': '</span>ordered<span class="string">' &#125;, &#123; '</span>list<span class="string">': '</span>bullet<span class="string">' &#125;],</span></span><br><span class="line"><span class="string">          ['</span>link<span class="string">', '</span>image<span class="string">'],</span></span><br><span class="line"><span class="string">          [&#123; '</span>color<span class="string">': [] &#125;, &#123; '</span>background<span class="string">': [] &#125;],</span></span><br><span class="line"><span class="string">          [&#123; '</span>align<span class="string">': [] &#125;]</span></span><br><span class="line"><span class="string">        ],</span></span><br><span class="line"><span class="string">        handlers: &#123;</span></span><br><span class="line"><span class="string">          '</span>image<span class="string">': function() &#123;</span></span><br><span class="line"><span class="string">            // 劫持原来的图片点击按钮事件</span></span><br><span class="line"><span class="string">            QuillWatch.emit(this.quill.id)</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;quill-image-resize-module-踩坑&quot;&gt;&lt;a href=&quot;#quill-image-resize-module-踩坑&quot; class=&quot;headerlink&quot; title=&quot;quill-image-resize-module 踩坑&quot;&gt;&lt;/a&gt;qu
      
    
    </summary>
    
      <category term="vuejs" scheme="http://twheastasia.github.io/categories/vuejs/"/>
    
    
      <category term="quill-image-resize-module" scheme="http://twheastasia.github.io/tags/quill-image-resize-module/"/>
    
  </entry>
  
  <entry>
    <title>给外网nextcloud设置服务器地址</title>
    <link href="http://twheastasia.github.io/2020/03/24/%E7%BB%99%E5%A4%96%E7%BD%91nextcloud%E8%AE%BE%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9C%B0%E5%9D%80/"/>
    <id>http://twheastasia.github.io/2020/03/24/给外网nextcloud设置服务器地址/</id>
    <published>2020-03-24T01:47:00.000Z</published>
    <updated>2020-03-24T01:57:51.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="给外网nextcloud设置服务器地址"><a href="#给外网nextcloud设置服务器地址" class="headerlink" title="给外网nextcloud设置服务器地址"></a>给外网nextcloud设置服务器地址</h1><p>最近搭建了自己的nextcloud，但是电脑客户端登录时遇到验证问题，验证时跳转的域名总是localhost，并不是我外网的真实域名。</p><p>查了nextcloud很多设置，终于在侧边栏“手机与电脑”设置中，找到一个“服务器地址”的设置。这里出问题时显示的就是localhost加一个端口号，现在通过修改配置改成了自己外网的域名。<br><img src="/images/server-url.png" alt="服务器地址"></p><h3 id="如何修改服务器地址"><a href="#如何修改服务器地址" class="headerlink" title="如何修改服务器地址"></a>如何修改服务器地址</h3><blockquote><p>我参考了这片文章 <a href="https://blog.haitianhome.com/nextcloud-config-php.html?replytocom=77#respond" target="_blank" rel="noopener">https://blog.haitianhome.com/nextcloud-config-php.html?replytocom=77#respond</a></p></blockquote><p>只修改了两个字段</p><pre><code>&apos;overwritehost&apos; =&gt; &apos;cloud.xxx.xxx&apos;,            #重写地址&apos;overwriteprotocol&apos; =&gt; &apos;https&apos;,          #协议, 可选 : HTTP、HTTPS</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;给外网nextcloud设置服务器地址&quot;&gt;&lt;a href=&quot;#给外网nextcloud设置服务器地址&quot; class=&quot;headerlink&quot; title=&quot;给外网nextcloud设置服务器地址&quot;&gt;&lt;/a&gt;给外网nextcloud设置服务器地址&lt;/h1&gt;&lt;p&gt;最近
      
    
    </summary>
    
    
      <category term="nextcloud" scheme="http://twheastasia.github.io/tags/nextcloud/"/>
    
      <category term="proxy" scheme="http://twheastasia.github.io/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>移动端h5中viewpoint的使用</title>
    <link href="http://twheastasia.github.io/2019/11/04/%E7%A7%BB%E5%8A%A8%E7%AB%AFh5%E4%B8%ADviewpoint%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://twheastasia.github.io/2019/11/04/移动端h5中viewpoint的使用/</id>
    <published>2019-11-04T07:25:00.000Z</published>
    <updated>2019-11-04T08:01:52.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移动端h5中viewpoint的使用"><a href="#移动端h5中viewpoint的使用" class="headerlink" title="移动端h5中viewpoint的使用"></a>移动端h5中viewpoint的使用</h1><h2 id="问题的引入"><a href="#问题的引入" class="headerlink" title="问题的引入"></a>问题的引入</h2><p>公司vue前端项目，嵌入到企业微信应用中使用，发现不能双指缩放html页面，在uc浏览器里可以使用双指缩放页面，误以为企业微信设置问题（走了一点弯路）；再使用手机版chrome浏览器发现也不能使用双指 缩放，所以排除是企业微信的问题。网上一搜“vue 禁止 缩放”，一下就定位到viewpoint了。</p><blockquote><p><a href="http://www.sunqizheng.com/blog/798.html" target="_blank" rel="noopener">据说</a>有些移动端浏览器，比如IOS10以上的Safari，安卓系统下的UC浏览器、QQ浏览器等，为了更好的用户体验，并没有遵循开发者禁止缩放的指定，虽然meta标签按如上写法，但依然允许用户双指缩放和双击放大。</p></blockquote><h2 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h2><ol><li><p>找到vue项目的入口index.html，发现里面确实有控制移动端缩放的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>user-scalable = no，表示禁止用户缩放，所以要改成yes或直接删掉user-scalable，同时调整放大倍数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=3, user-scalable=yes"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>实际测试，可以在移动端企业微信和chrome下缩放</p></li></ol><hr><h2 id="顺便学习一下viewpoint，了解下怎么使用，参数怎么设置"><a href="#顺便学习一下viewpoint，了解下怎么使用，参数怎么设置" class="headerlink" title="顺便学习一下viewpoint，了解下怎么使用，参数怎么设置"></a>顺便学习一下viewpoint，了解下怎么使用，参数怎么设置</h2><p>原文链接：<a href="https://blog.csdn.net/shenlei19911210/article/details/51284910" target="_blank" rel="noopener">https://blog.csdn.net/shenlei19911210/article/details/51284910</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html document --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">content</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        height = [pixel_value | device-height] ,</span></span></span><br><span class="line"><span class="tag"><span class="string">        width = [pixel_value | device-width ] ,</span></span></span><br><span class="line"><span class="tag"><span class="string">        initial-scale = float_value ,</span></span></span><br><span class="line"><span class="tag"><span class="string">        minimum-scale = float_value ,</span></span></span><br><span class="line"><span class="tag"><span class="string">        maximum-scale = float_value ,</span></span></span><br><span class="line"><span class="tag"><span class="string">        user-scalable = [yes | no] ,</span></span></span><br><span class="line"><span class="tag"><span class="string">        target-densitydpi = [dpi_value | device-dpi | high-dpi | medium-dpi | low-dpi]</span></span></span><br><span class="line"><span class="tag"><span class="string">    "</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="width"><a href="#width" class="headerlink" title="width"></a>width</h4><p>控制 viewport 的大小，pixel_value表示可以指定的一个值或者特殊的值，而device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。</p><h4 id="height"><a href="#height" class="headerlink" title="height"></a>height</h4><p>和 width 相对应，指定高度。</p><h4 id="target-densitydpi"><a href="#target-densitydpi" class="headerlink" title="target-densitydpi"></a>target-densitydpi</h4><p>一个屏幕像素密度是由屏幕分辨率决定的，通常定义为每英寸点的数量（dpi）。Android支持三种屏幕像素密度：低像素密度，中像素密度，高像素密度。一个低像素密度的屏幕每英寸上的像素点更少，而一个高像素密度的屏幕每英寸上的像素点更多。Android Browser和WebView默认屏幕为中像素密度。</p><p>下面是 target-densitydpi 属性的 取值范围</p><blockquote><ol><li>device-dpi – 使用设备原本的 dpi 作为目标 dp。 不会发生默认缩放。</li><li>high-dpi – 使用hdpi 作为目标 dpi。 中等像素密度和低像素密度设备相应缩小。 </li><li>medium-dpi – 使用mdpi作为目标 dpi。 高像素密度设备相应放大， 像素密度设备相应缩小。 这是默认的target density. </li><li>low-dpi - 使用mdpi作为目标 dpi。中等像素密度和高像素密度设备相应放大。</li><li>dpi_value – 指定一个具体的dpi 值作为target dpi. 这个值的范围必须在<strong>70–400</strong>之间。</li></ol></blockquote><p>为了防止Android Browser和WebView 根据不同屏幕的像素密度对你的页面进行缩放，你可以将viewport的target-densitydpi 设置为 device-dpi。当你这么做了，页面将不会缩放。相反，页面会根据当前屏幕的像素密度进行展示。在这种情形下，你还需要将viewport的width定义为与设备的width匹配，这样你的页面就可以和屏幕相适应。</p><h4 id="initial-scale"><a href="#initial-scale" class="headerlink" title="initial-scale"></a>initial-scale</h4><p>初始缩放。即页面初始缩放程度。这是一个浮点值，是页面大小的一个乘数。例如，如果你设置初始缩放为“1.0”，那么，web页面在展现的时候就会以target density分辨率的1:1来展现。如果你设置为“2.0”，那么这个页面就会放大为2倍。</p><h4 id="maximum-scale"><a href="#maximum-scale" class="headerlink" title="maximum-scale"></a>maximum-scale</h4><p>最大缩放。即允许的最大缩放程度。这也是一个浮点值，用以指出页面大小与屏幕大小相比的最大乘数。例如，如果你将这个值设置为“2.0”，那么这个页面与target size相比，最多能放大2倍。</p><h4 id="user-scalable"><a href="#user-scalable" class="headerlink" title="user-scalable"></a>user-scalable</h4><p>用户调整缩放。即用户是否能改变页面缩放程度。如果设置为yes则是允许用户对其进行改变，反之为no。<strong>默认值是yes</strong>。如果你将其设置为no，那么minimum-scale 和 maximum-scale都将被忽略，因为根本不可能缩放。</p><p>(<strong>所有的缩放值都必须在0.01–10的范围之内。</strong>)</p><h3 id="例："><a href="#例：" class="headerlink" title="例："></a>例：</h3><p>(设置屏幕宽度为设备宽度，禁止用户手动调整缩放)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,user-scalable=no"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>(设置屏幕密度为高频，中频，低频自动缩放，禁止用户手动调整缩放)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,target-densitydpi=high-dpi,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;移动端h5中viewpoint的使用&quot;&gt;&lt;a href=&quot;#移动端h5中viewpoint的使用&quot; class=&quot;headerlink&quot; title=&quot;移动端h5中viewpoint的使用&quot;&gt;&lt;/a&gt;移动端h5中viewpoint的使用&lt;/h1&gt;&lt;h2 id=&quot;问
      
    
    </summary>
    
    
      <category term="html5" scheme="http://twheastasia.github.io/tags/html5/"/>
    
      <category term="viewpoint" scheme="http://twheastasia.github.io/tags/viewpoint/"/>
    
  </entry>
  
  <entry>
    <title>前端一次编译多环境部署</title>
    <link href="http://twheastasia.github.io/2019/10/30/%E5%89%8D%E7%AB%AF%E4%B8%80%E6%AC%A1%E7%BC%96%E8%AF%91%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    <id>http://twheastasia.github.io/2019/10/30/前端一次编译多环境部署/</id>
    <published>2019-10-30T11:27:00.000Z</published>
    <updated>2019-10-30T11:27:20.455Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端一次编译多环境部署"><a href="#前端一次编译多环境部署" class="headerlink" title="前端一次编译多环境部署"></a>前端一次编译多环境部署</h1><h4 id="需求"><a href="#需求" class="headerlink" title="需求:"></a>需求:</h4><blockquote><p>想要只编译一次，能同时发布到staging和prodcution环境！</p></blockquote><h4 id="现状："><a href="#现状：" class="headerlink" title="现状："></a>现状：</h4><blockquote><p>一些配置写在了代码里，有通过环境设置不同变量的，但是环境变量和外网是相同的，所以值也和外网一样了</p></blockquote><h3 id="可以尝试的解决办法"><a href="#可以尝试的解决办法" class="headerlink" title="可以尝试的解决办法"></a>可以尝试的解决办法</h3><ul><li>从接口读取配置，由接口控制不同环境的值</li><li>从本地文件读取可变的配置。代码里可以读取同一个地址的配置文件，但是在docker启动时挂载不同的配置文件</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前端一次编译多环境部署&quot;&gt;&lt;a href=&quot;#前端一次编译多环境部署&quot; class=&quot;headerlink&quot; title=&quot;前端一次编译多环境部署&quot;&gt;&lt;/a&gt;前端一次编译多环境部署&lt;/h1&gt;&lt;h4 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="vue" scheme="http://twheastasia.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>ssh保持长链接</title>
    <link href="http://twheastasia.github.io/2019/08/04/ssh%20%E9%95%BF%E9%93%BE%E6%8E%A5/"/>
    <id>http://twheastasia.github.io/2019/08/04/ssh 长链接/</id>
    <published>2019-08-04T04:11:00.000Z</published>
    <updated>2021-04-15T02:54:45.821Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssh-保持长连接"><a href="#ssh-保持长连接" class="headerlink" title="ssh 保持长连接"></a>ssh 保持长连接</h1><p>在不修改sever、client的ssh配置的前提下，可以通过在命令中添加参数来实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -o ServerAliveInterval=15 -o ServerAliveCountMax=3 root@xxxxxxx</span><br></pre></td></tr></table></figure><p>每隔15秒重连一下，如果3次都没有返回，才会断开连接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ssh-保持长连接&quot;&gt;&lt;a href=&quot;#ssh-保持长连接&quot; class=&quot;headerlink&quot; title=&quot;ssh 保持长连接&quot;&gt;&lt;/a&gt;ssh 保持长连接&lt;/h1&gt;&lt;p&gt;在不修改sever、client的ssh配置的前提下，可以通过在命令中添加参数来实现
      
    
    </summary>
    
      <category term="ssh" scheme="http://twheastasia.github.io/categories/ssh/"/>
    
    
      <category term="ssh" scheme="http://twheastasia.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中离开页面时提示功能</title>
    <link href="http://twheastasia.github.io/2019/05/23/%E9%80%80%E5%87%BA%E9%A1%B5%E9%9D%A2%E6%97%B6%E6%8F%90%E7%A4%BA%EF%BC%88vue%EF%BC%89/"/>
    <id>http://twheastasia.github.io/2019/05/23/退出页面时提示（vue）/</id>
    <published>2019-05-23T02:43:00.000Z</published>
    <updated>2019-06-05T07:58:31.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue项目中离开页面时提示功能"><a href="#vue项目中离开页面时提示功能" class="headerlink" title="vue项目中离开页面时提示功能"></a>vue项目中离开页面时提示功能</h1><hr><ul><li>当页面刷新、浏览器窗口关闭、页面前进、页面后退，用浏览器自带的confirm</li><li>项目中路由之间的跳转，可以用vue项目引入的组件实现</li></ul><h3 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a>路由跳转</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">beforeRouteLeave(to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  next(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">if</span> (to.path !== <span class="string">'xxx'</span> &amp;&amp; someOtherCondition) &#123;</span><br><span class="line">    <span class="keyword">this</span>.$confirm(<span class="string">'您还未保存页面内容，确定需要退出吗?'</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">      confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">      cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">      type: <span class="string">'warning'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 选择确定</span></span><br><span class="line">      next()</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 选择取消</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 不是预期的页面就继续跳转</span></span><br><span class="line">    next()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页面刷新、浏览器窗口关闭、页面前进、页面后退"><a href="#页面刷新、浏览器窗口关闭、页面前进、页面后退" class="headerlink" title="页面刷新、浏览器窗口关闭、页面前进、页面后退"></a>页面刷新、浏览器窗口关闭、页面前进、页面后退</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这几个事件只能在beforeunload中捕获</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'beforeunload'</span>, (event) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.$route.name === <span class="string">'xxx'</span> &amp;&amp; someOtherCondition) &#123;</span><br><span class="line">    event.returnValue = <span class="string">'reload'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vue项目中离开页面时提示功能&quot;&gt;&lt;a href=&quot;#vue项目中离开页面时提示功能&quot; class=&quot;headerlink&quot; title=&quot;vue项目中离开页面时提示功能&quot;&gt;&lt;/a&gt;vue项目中离开页面时提示功能&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;当页面刷新、浏
      
    
    </summary>
    
    
      <category term="vue" scheme="http://twheastasia.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>mac下使用plist实现定时任务</title>
    <link href="http://twheastasia.github.io/2019/02/02/mac%E4%B8%8B%E4%BD%BF%E7%94%A8plist%E5%AE%9E%E7%8E%B0%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://twheastasia.github.io/2019/02/02/mac下使用plist实现定时任务/</id>
    <published>2019-02-02T02:43:00.000Z</published>
    <updated>2019-05-23T06:58:59.145Z</updated>
    
    <content type="html"><![CDATA[<p>记录下主要步骤：</p><ol><li>新建一个任务脚本文件，如 /Users/username/Downloads/autoRun.sh (里面的具体内容就是到了时间要跑的任务内容)</li><li>chmod 755 autoRun.sh （确保有可执行的权限）</li><li>然后进入到~/Library/LaunchAgents 下建一个plist文件，如com.twh.test.autorun.plist</li><li>plist文件内容可以参考下面的：</li><li>Label 可以随便起，但是要唯一 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ProgramArguments 存放需要定时跑的脚本路径+名字</span><br><span class="line">StartCalendarInterval 可以定时到 “时 分 秒”</span><br><span class="line">也可以使用StartInterval 表示间隔多少秒,如</span><br><span class="line">StartInterval 60</span><br></pre></td></tr></table></figure></li></ol><p>6.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开始执行定时任务 launchctl load com.twh.test.autorun.plist </span><br><span class="line">取消定时任务 launchctl unload com.twh.test.autorun.plist  </span><br><span class="line">立即执行任务一次 launchctl start com.twh.test.autorun.plist  </span><br><span class="line">停止执行任务 launchctl stop com.twh.test.autorun.plist</span><br></pre></td></tr></table></figure><p><a href="http://my.oschina.net/jackin/blog/263024" target="_blank" rel="noopener">http://my.oschina.net/jackin/blog/263024</a></p><p><a href="http://www.2cto.com/os/201305/215350.html" target="_blank" rel="noopener">http://www.2cto.com/os/201305/215350.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录下主要步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新建一个任务脚本文件，如 /Users/username/Downloads/autoRun.sh (里面的具体内容就是到了时间要跑的任务内容)&lt;/li&gt;
&lt;li&gt;chmod 755 autoRun.sh （确保有可执行的权限）&lt;
      
    
    </summary>
    
    
      <category term="mac" scheme="http://twheastasia.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>opentWrt 流量控制tc</title>
    <link href="http://twheastasia.github.io/2019/02/02/opentWrt-%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6tc/"/>
    <id>http://twheastasia.github.io/2019/02/02/opentWrt-流量控制tc/</id>
    <published>2019-02-02T01:48:00.000Z</published>
    <updated>2020-03-24T01:57:54.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在openwrt路由上使用tc命令控制网络的带宽、延时、丢包率，来模拟一些弱网络的环境"><a href="#在openwrt路由上使用tc命令控制网络的带宽、延时、丢包率，来模拟一些弱网络的环境" class="headerlink" title="在openwrt路由上使用tc命令控制网络的带宽、延时、丢包率，来模拟一些弱网络的环境"></a>在openwrt路由上使用tc命令控制网络的带宽、延时、丢包率，来模拟一些弱网络的环境</h2><h4 id="1-核心命令"><a href="#1-核心命令" class="headerlink" title="1.核心命令"></a>1.核心命令</h4><p>参考：Network Traffic Control (QOS)</p><p><img src="/images/pasted-0.png" alt="upload successful"></p><h6 id="用opkg安装"><a href="#用opkg安装" class="headerlink" title="用opkg安装"></a>用opkg安装</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install tc iptables-mod-ipopt</span><br></pre></td></tr></table></figure><h6 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tc qdisc del dev eth0 root</span><br><span class="line">tc qdisc add dev eth0 root netem rate 1mbit delay 200ms loss 10%​</span><br></pre></td></tr></table></figure><h4 id="2-界面"><a href="#2-界面" class="headerlink" title="2.界面"></a>2.界面</h4><p>光有了命令，每次都要ssh上去，还是很麻烦，所以需要一个快捷执行命令的方法</p><p>这里非常感谢Shuhao Wu分享的Traffic Cop工具，可以方便的在网页上设置网络环境</p><p>安装方法在他的文章末尾有，我主要说下我安装、使用过程中碰到的问题：</p><ul><li><p>Package kmod-sched wants to install file /lib/modules/3.10.49/sch_netem.ko But that file is already provided by package kmod-netem Collected errors <strong>解决方法是 命令后加  –force-overwrite</strong></p></li><li><p>安装成功后，启动trafficcop，网页访问后，点了按钮，不能实现限速。原因应该是tc命令中的interface 或参数设置不正确，具体还没仔细看，临时的解决方法是，把 tc命令直接在在 /usr/lib/trafficcop/api/edge 等文件中</p></li><li><p>还可以自己加按钮加配置，按钮的id要和新的配置文件名一样就可以</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;在openwrt路由上使用tc命令控制网络的带宽、延时、丢包率，来模拟一些弱网络的环境&quot;&gt;&lt;a href=&quot;#在openwrt路由上使用tc命令控制网络的带宽、延时、丢包率，来模拟一些弱网络的环境&quot; class=&quot;headerlink&quot; title=&quot;在openw
      
    
    </summary>
    
    
      <category term="tc" scheme="http://twheastasia.github.io/tags/tc/"/>
    
      <category term="openwrt" scheme="http://twheastasia.github.io/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>zsh中自定义命令提示符格式、内容</title>
    <link href="http://twheastasia.github.io/2019/02/01/zsh%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    <id>http://twheastasia.github.io/2019/02/01/zsh自定义/</id>
    <published>2019-02-01T07:45:00.000Z</published>
    <updated>2019-05-23T06:58:59.146Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改-zshrc文件"><a href="#修改-zshrc文件" class="headerlink" title="修改 ~/.zshrc文件"></a>修改 ~/.zshrc文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">添加：</span><br><span class="line">PROMPT = &quot;%n@%m &gt;&gt;&gt;&quot;  #左提示符</span><br><span class="line">RPROMPT = &quot;%/&quot;        #右提示符</span><br><span class="line"></span><br><span class="line">添加颜色：</span><br><span class="line">#导入 colors</span><br><span class="line">autoload -U colors &amp;&amp; colors</span><br><span class="line"></span><br><span class="line">$fg[red]              #颜色改变的开始位置</span><br><span class="line">$reset_color          #颜色改变的结束位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我的~/.zshrc中 PROMPT设置：</span><br><span class="line">PROMPT=$&apos;%&#123;$fg[cyan]%&#125;%* %D%&#123;$reset_color%&#125;|%&#123;$fg[white]%&#125;%U%n%u@%U%m%u%&#123;$reset_color%&#125;|%&#123;$fg[yellow]%&#125;D:%B%~%b &gt;&gt;&gt; %&#123;$reset_color%&#125;\n%# &apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">附上一些常用的预定义prompt参数：</span><br><span class="line">! 和%h一样</span><br><span class="line">%B 开始粗体模式</span><br><span class="line">%b 结束粗体模式</span><br><span class="line">%c 当前工作目录名称的最后部分</span><br><span class="line">%C 跟%c类似，但是使用长形式的目录名称</span><br><span class="line">%d 本周的当天</span><br><span class="line">%D 今天是当月中的第几天</span><br><span class="line">%h 当前命令的历史记录编号</span><br><span class="line">%l shell的当前控制终端</span><br><span class="line">%L 清除从提示符末尾到下一行的所有内容</span><br><span class="line">%m 机器的主机名称</span><br><span class="line">%M 机器的完全符合规范的域名</span><br><span class="line">%n 用户名</span><br><span class="line">%p 用精确格式（包括秒）显示的12小时制时间</span><br><span class="line">%P 用精确格式（包括秒）显示的24小时制时间</span><br><span class="line">%S 开始标准输出格式</span><br><span class="line">%s 结束标准输出格式</span><br><span class="line">%t 以12小时制格式显示时间</span><br><span class="line">%T 以24小时制格式显示时间</span><br><span class="line">%U 开始下划线模式</span><br><span class="line">%u 结束下划线模式</span><br><span class="line">%w 当前月的名称</span><br><span class="line">%W 当前月的序数</span><br><span class="line">%y 以2位格式表示的年</span><br><span class="line">%Y 以4位格式表示的年</span><br><span class="line">%% %字符</span><br><span class="line">%! 跟%h相同</span><br><span class="line">%@ 跟%t相同</span><br><span class="line">$# 扩展到&gt;供常规使用，如果用户正以root身份运行的话，就扩展到#</span><br><span class="line">%/ 当前工作目录的完整名称</span><br><span class="line">%- 以短格式表示的当前工作目录</span><br><span class="line">^C 跟C匹配的控制字符：例如^G代表Ctrl+G</span><br><span class="line">\a 使tcsh在任何时候显示提示符时嘟嘟响</span><br><span class="line">\e 终止的escape符0x1B</span><br><span class="line">\f 终止的换页符</span><br><span class="line">\n 在这个位置开始一个新行</span><br><span class="line">\r 回车符</span><br><span class="line">\t Tab制表符</span><br><span class="line">\v 垂直制表符</span><br><span class="line">\nnn 由八进制数字nnn所指定的字符</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;修改-zshrc文件&quot;&gt;&lt;a href=&quot;#修改-zshrc文件&quot; class=&quot;headerlink&quot; title=&quot;修改 ~/.zshrc文件&quot;&gt;&lt;/a&gt;修改 ~/.zshrc文件&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;ta
      
    
    </summary>
    
      <category term="linux" scheme="http://twheastasia.github.io/categories/linux/"/>
    
    
      <category term="zsh" scheme="http://twheastasia.github.io/tags/zsh/"/>
    
  </entry>
  
  <entry>
    <title>ui automonkey（ios）</title>
    <link href="http://twheastasia.github.io/2019/02/01/ui_automonkey/"/>
    <id>http://twheastasia.github.io/2019/02/01/ui_automonkey/</id>
    <published>2019-02-01T07:11:00.000Z</published>
    <updated>2019-05-23T06:58:59.145Z</updated>
    
    <content type="html"><![CDATA[<p>git hub 地址：<a href="https://github.com/jonathanpenn/ui-auto-monkey" target="_blank" rel="noopener">https://github.com/jonathanpenn/ui-auto-monkey</a></p><p>简单步骤：使用ios Instruments中的UIAutomation，然后将已编写好的脚本（UIAutoMonkey.js）导入并运行</p><p>config可自行配置</p><p>uiautomation中元素访问及操作方法：<br><a href="https://github.com/twheastasia/eastasia/blob/master/uiautomationScript/sample.js" target="_blank" rel="noopener">https://github.com/twheastasia/eastasia/blob/master/uiautomationScript/sample.js</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;git hub 地址：&lt;a href=&quot;https://github.com/jonathanpenn/ui-auto-monkey&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/jonathanpenn/ui-aut
      
    
    </summary>
    
      <category term="自动化" scheme="http://twheastasia.github.io/categories/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
      <category term="ios" scheme="http://twheastasia.github.io/tags/ios/"/>
    
      <category term="ui automation" scheme="http://twheastasia.github.io/tags/ui-automation/"/>
    
      <category term="automation" scheme="http://twheastasia.github.io/tags/automation/"/>
    
  </entry>
  
</feed>
